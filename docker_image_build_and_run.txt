pipeline {
    agent any

    environment {
        IMAGE_NAME = 'your_docker_image_name'
        CONTAINER_NAME = 'your_docker_container_name'
        DOCKERFILE_PATH = 'Dockerfile'
        HOST_PORT = '8080'      // Port on the host machine
        CONTAINER_PORT = '80'   // Port inside the Docker container
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'your_repo_url'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    docker.build("${IMAGE_NAME}", "-f ${DOCKERFILE_PATH} .")
                }
            }
        }

        stage('Run Docker Container') {
            steps {
                script {
                    // Stop and remove the existing container if it's running
                    sh "docker stop ${CONTAINER_NAME} || true && docker rm ${CONTAINER_NAME} || true"
                    
                    // Find and stop any container using the specified host port
                    sh "docker ps -q --filter 'publish=${HOST_PORT}' | xargs --no-run-if-empty docker stop || true"
                    
                    // Run the Docker container with different host and container ports
                    sh "docker run -d -p ${HOST_PORT}:${CONTAINER_PORT} --name ${CONTAINER_NAME} ${IMAGE_NAME}"
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}
